stages:
  - "build"
  - "package"
  - "deploy"

variables:
  OPENSHIFT_NAMESPACE: "psd2-sandbox-dev"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.cache/m2"
  NPM_CONFIG_CACHE: "$CI_PROJECT_DIR/.cache/npm"
  SANDBOX_IMAGE: "psd2-sandbox"
  SSL_PROXY_IMAGE: "psd2-sandbox-ssl-proxy"
  JAVA_TOOL_OPTIONS: "-Xmx1g"

.releases: &releases
  - /^v\d+\.\d+\.\d+(-.*)?$/

build_service:
  tags:
    - docker
  stage: "build"
  image: "adorsys/ci-build@sha256:126924e2ef70600a101d972c9844b0bc266990043b7fb1033d107b985f778dc2"
  script:
    # package instead of test because we need the jacoco report
    - mvn -f service/pom.xml -B clean package
    - |
      echo 'Code coverage:' $(cat service/target/site/jacoco/index.html | grep -ioE "Total[^%]+%" | grep -ioE "[[:digit:]]{1,3}%")
  artifacts:
    # generated license information
    name: "service-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - service/target/site/*
    expire_in: "1 week"
  cache:
    key: MVN
    paths:
      - ".cache/m2"
  coverage: '/Code coverage: (\d+(?:\.\d+)?)%/'

build_ui:
  tags:
    - docker
  stage: "build"
  image: "adorsys/ci-build@sha256:126924e2ef70600a101d972c9844b0bc266990043b7fb1033d107b985f778dc2"
  script:
    - cd ui
    - npm ci
    - npm run tslint
    - npm run prettier-check
    - npm run test-ci
    - npm run build -- --prod
  artifacts:
    name: "ui-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - "ui/dist"
    expire_in: "1 week"
  cache:
    key: NPM
    paths:
      - ".cache/npm"
  coverage: '/Statements\s+:\s+\d+\.\d+/'

build_arc42:
  stage: "build"
  image: "adorsys/arc42-tools"
  script:
    - make arc42/psd2-accelerator-arc42.html
  artifacts:
    name: "arc42-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - "arc42/images"
      - "arc42/*.html"
    expire_in: "1 week"
  cache: {}

package:
  tags:
    - docker
  stage: package
  image: "adorsys/ci-build@sha256:126924e2ef70600a101d972c9844b0bc266990043b7fb1033d107b985f778dc2"
  script:
    - mvn -f service/pom.xml -B -DskipTests clean package
  artifacts:
    name: "sandbox-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - service/target/*.jar
    expire_in: "1 week"
  cache:
    key: MVN
    paths:
      - ".cache/m2"
  dependencies:
    - build_service
    - build_ui

docker_build_only:
  tags:
    - docker
  stage: "deploy"
  except:
    - master
    - tags
  script:
    - echo $OPENSHIFT_TOKEN | docker login --password-stdin -u openshift $OPENSHIFT_REGISTRY
    - docker build --pull
      -t "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/psd2-sandbox:$CI_COMMIT_REF_SLUG"
      service
    - docker build --pull -t "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:$CI_COMMIT_REF_SLUG"
      ssl-proxy
  cache: {}
  dependencies:
    - package

docker_build_deploy:
  tags:
    - docker
  stage: "deploy"
  only:
    - master
  script:
    - echo $OPENSHIFT_TOKEN | docker login --password-stdin -u openshift $OPENSHIFT_REGISTRY
    # build sandbox
    - docker build --pull
      -t "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SANDBOX_IMAGE:$CI_COMMIT_REF_SLUG"
      service
    - docker tag "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SANDBOX_IMAGE:$CI_COMMIT_REF_SLUG"
      "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SANDBOX_IMAGE:latest"
    - docker push "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SANDBOX_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker push "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SANDBOX_IMAGE:latest" # tag master as latest, too
    # build ssl-proxy
    - docker build --pull
      -t "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:$CI_COMMIT_REF_SLUG"
      ssl-proxy
    - docker tag "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:$CI_COMMIT_REF_SLUG"
      "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:latest"
    - docker push "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker push "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:latest" # tag master as latest, too
  environment:
    name: dev
    url: http://psd2-sandbox-dev.cloud.adorsys.de
  cache: {}
  dependencies:
    - package

docker_build_release:
  tags:
    - docker
  stage: "deploy"
  only: *releases
  script:
    - source infrastructure/build/bash_functions.sh
    - echo $OPENSHIFT_TOKEN | docker login --password-stdin -u openshift $OPENSHIFT_REGISTRY
    - echo $DOCKERHUB_PASSWORD | docker login --password-stdin -u adorsysserviceaccount
    # build sandbox
    - docker build --pull
      -t "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SANDBOX_IMAGE:$(git2dockerTag $CI_COMMIT_TAG)"
      service
    - docker push "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SANDBOX_IMAGE:$(git2dockerTag $CI_COMMIT_TAG)"
    - docker tag "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SANDBOX_IMAGE:$(git2dockerTag $CI_COMMIT_TAG)" "adorsys/psd2-sandbox:$(git2dockerTag $CI_COMMIT_TAG)"
    - docker push "adorsys/psd2-sandbox:$(git2dockerTag $CI_COMMIT_TAG)"
    # build ss-proxy
    - docker build --pull
      -t "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:$(git2dockerTag $CI_COMMIT_TAG)"
      ssl-proxy
    - docker push "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:$(git2dockerTag $CI_COMMIT_TAG)"
    - docker tag "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/$SSL_PROXY_IMAGE:$(git2dockerTag $CI_COMMIT_TAG)" "adorsys/psd2-sandbox-ssl-proxy:$(git2dockerTag $CI_COMMIT_TAG)"
    - docker push "adorsys/psd2-sandbox-ssl-proxy:$(git2dockerTag $CI_COMMIT_TAG)"
  cache: {}
  dependencies:
    - package

# deploy to GitLab Pages
pages:
  stage: "deploy"
  only:
    - master
  script:
    # arc42 documentation
    - mkdir public
    - cp -r arc42/images public
    - cp arc42/psd2-sandbox-arc42.html public/index.html
    - cp arc42/psd2-sandbox-deployment.html public/deployment.html
    # license information
    - mkdir public/licenses
    - cp -r service/target/site/css public/licenses
    - cp -r service/target/site/images public/licenses
    - cp service/target/site/dependencies.html public/licenses/dependencies.html
  artifacts:
    paths:
      - "public"
  cache: {}
  dependencies:
    - build_arc42
    - build_service

