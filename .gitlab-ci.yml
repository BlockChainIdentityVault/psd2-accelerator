stages:
  - "build"
  - "package"
  - "deploy"

variables:
  OPENSHIFT_NAMESPACE: "psd2-sandbox-dev"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.cache/m2"
  NPM_CONFIG_CACHE: "$CI_PROJECT_DIR/.cache/npm"

build_service:
  tags:
    - docker
  stage: "build"
  image: "adorsys/ci-build@sha256:126924e2ef70600a101d972c9844b0bc266990043b7fb1033d107b985f778dc2"
  script:
    # package instead of test because we need the jacoco report
    - mvn -f service/pom.xml -B clean package
    - |
      echo 'Code coverage:' $(cat service/target/site/jacoco/index.html | grep -ioE "Total[^%]+%" | grep -ioE "[[:digit:]]{1,3}%")
  cache:
    key: MVN
    paths:
      - ".cache/m2"
  coverage: '/Code coverage: (\d+(?:\.\d+)?)%/'

build_ui:
  tags:
    - docker
  stage: "build"
  image: "adorsys/ci-build@sha256:126924e2ef70600a101d972c9844b0bc266990043b7fb1033d107b985f778dc2"
  script:
    - cd ui
    - npm ci
    - npm run tslint
    - npm run prettier-check
    - npm run test-ci
    - npm run build
  artifacts:
    name: "ui-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - "ui/dist"
    expire_in: "1 week"
  cache:
    key: NPM
    paths:
      - ".cache/npm"
  coverage: '/Statements\s+:\s+\d+\.\d+/'

build_arc42:
  stage: "build"
  image: "adorsys/arc42-tools"
  script:
    - cd arc42
    - plantuml -o "$PWD/images/generated" diagrams/*
    - asciidoctor psd2-sandbox-arc42.adoc
  artifacts:
    name: "arc42-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - "arc42/images"
      - "arc42/*.html"
    expire_in: "1 week"
  cache: {}

package:
  tags:
    - docker
  stage: package
  image: "adorsys/ci-build@sha256:126924e2ef70600a101d972c9844b0bc266990043b7fb1033d107b985f778dc2"
  script:
    - mvn -f service/pom.xml -B -DskipTests clean package
  artifacts:
    name: "sandbox-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - service/target/*.jar
    expire_in: "1 week"
  cache:
    key: MVN
    paths:
      - ".cache/m2"
  dependencies:
    - build_service
    - build_ui

docker_build_only:
  tags:
    - docker
  stage: "deploy"
  except:
    - master
  script:
    - docker build --pull
      -t "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/psd2-sandbox:$CI_COMMIT_REF_SLUG"
      service
  cache: {}
  dependencies:
    - package

docker_build_deploy:
  tags:
    - docker
  stage: "deploy"
  only:
    - master
  script:
    - docker login -u openshift -p $OPENSHIFT_TOKEN $OPENSHIFT_REGISTRY
    - docker build --pull
      -t "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/psd2-sandbox:$CI_COMMIT_REF_SLUG"
      service
    - docker tag "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/psd2-sandbox:$CI_COMMIT_REF_SLUG"
      "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/psd2-sandbox:latest"
    - docker push "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/psd2-sandbox:$CI_COMMIT_REF_SLUG"
    - docker push "$OPENSHIFT_REGISTRY/$OPENSHIFT_NAMESPACE/psd2-sandbox:latest" # tag master as latest, too
  environment:
    name: dev
    url: http://psd2-sandbox-dev.cloud.adorsys.de
  cache: {}
  dependencies:
    - package
